// source: pathCommands.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var gpx_pb = require('./gpx_pb.js');
goog.object.extend(proto, gpx_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.path.domain.CreatePathFromGpxCommand', null, global);
goog.exportSymbol('proto.path.domain.PathCommand', null, global);
goog.exportSymbol('proto.path.domain.PathCommand.CommandCase', null, global);
goog.exportSymbol('proto.path.domain.RemovePathCommand', null, global);
goog.exportSymbol('proto.path.domain.RenamePathCommand', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.domain.PathCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.path.domain.PathCommand.oneofGroups_);
};
goog.inherits(proto.path.domain.PathCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.domain.PathCommand.displayName = 'proto.path.domain.PathCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.domain.CreatePathFromGpxCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.domain.CreatePathFromGpxCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.domain.CreatePathFromGpxCommand.displayName = 'proto.path.domain.CreatePathFromGpxCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.domain.RenamePathCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.domain.RenamePathCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.domain.RenamePathCommand.displayName = 'proto.path.domain.RenamePathCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.domain.RemovePathCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.domain.RemovePathCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.domain.RemovePathCommand.displayName = 'proto.path.domain.RemovePathCommand';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.path.domain.PathCommand.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.path.domain.PathCommand.CommandCase = {
  COMMAND_NOT_SET: 0,
  CREATEPATHFROMGPXCOMMAND: 2,
  RENAMEPATHCOMMAND: 3,
  REMOVEPATHCOMMAND: 4
};

/**
 * @return {proto.path.domain.PathCommand.CommandCase}
 */
proto.path.domain.PathCommand.prototype.getCommandCase = function() {
  return /** @type {proto.path.domain.PathCommand.CommandCase} */(jspb.Message.computeOneofCase(this, proto.path.domain.PathCommand.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.domain.PathCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.path.domain.PathCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.domain.PathCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.domain.PathCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_pb.ProtoUUID.toObject(includeInstance, f),
    createpathfromgpxcommand: (f = msg.getCreatepathfromgpxcommand()) && proto.path.domain.CreatePathFromGpxCommand.toObject(includeInstance, f),
    renamepathcommand: (f = msg.getRenamepathcommand()) && proto.path.domain.RenamePathCommand.toObject(includeInstance, f),
    removepathcommand: (f = msg.getRemovepathcommand()) && proto.path.domain.RemovePathCommand.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.domain.PathCommand}
 */
proto.path.domain.PathCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.domain.PathCommand;
  return proto.path.domain.PathCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.domain.PathCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.domain.PathCommand}
 */
proto.path.domain.PathCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ProtoUUID;
      reader.readMessage(value,common_pb.ProtoUUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.path.domain.CreatePathFromGpxCommand;
      reader.readMessage(value,proto.path.domain.CreatePathFromGpxCommand.deserializeBinaryFromReader);
      msg.setCreatepathfromgpxcommand(value);
      break;
    case 3:
      var value = new proto.path.domain.RenamePathCommand;
      reader.readMessage(value,proto.path.domain.RenamePathCommand.deserializeBinaryFromReader);
      msg.setRenamepathcommand(value);
      break;
    case 4:
      var value = new proto.path.domain.RemovePathCommand;
      reader.readMessage(value,proto.path.domain.RemovePathCommand.deserializeBinaryFromReader);
      msg.setRemovepathcommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.domain.PathCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.domain.PathCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.domain.PathCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.domain.PathCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ProtoUUID.serializeBinaryToWriter
    );
  }
  f = message.getCreatepathfromgpxcommand();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.path.domain.CreatePathFromGpxCommand.serializeBinaryToWriter
    );
  }
  f = message.getRenamepathcommand();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.path.domain.RenamePathCommand.serializeBinaryToWriter
    );
  }
  f = message.getRemovepathcommand();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.path.domain.RemovePathCommand.serializeBinaryToWriter
    );
  }
};


/**
 * optional path.common.ProtoUUID id = 1;
 * @return {?proto.path.common.ProtoUUID}
 */
proto.path.domain.PathCommand.prototype.getId = function() {
  return /** @type{?proto.path.common.ProtoUUID} */ (
    jspb.Message.getWrapperField(this, common_pb.ProtoUUID, 1));
};


/**
 * @param {?proto.path.common.ProtoUUID|undefined} value
 * @return {!proto.path.domain.PathCommand} returns this
*/
proto.path.domain.PathCommand.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.domain.PathCommand} returns this
 */
proto.path.domain.PathCommand.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.domain.PathCommand.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CreatePathFromGpxCommand createPathFromGpxCommand = 2;
 * @return {?proto.path.domain.CreatePathFromGpxCommand}
 */
proto.path.domain.PathCommand.prototype.getCreatepathfromgpxcommand = function() {
  return /** @type{?proto.path.domain.CreatePathFromGpxCommand} */ (
    jspb.Message.getWrapperField(this, proto.path.domain.CreatePathFromGpxCommand, 2));
};


/**
 * @param {?proto.path.domain.CreatePathFromGpxCommand|undefined} value
 * @return {!proto.path.domain.PathCommand} returns this
*/
proto.path.domain.PathCommand.prototype.setCreatepathfromgpxcommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.path.domain.PathCommand.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.domain.PathCommand} returns this
 */
proto.path.domain.PathCommand.prototype.clearCreatepathfromgpxcommand = function() {
  return this.setCreatepathfromgpxcommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.domain.PathCommand.prototype.hasCreatepathfromgpxcommand = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RenamePathCommand renamePathCommand = 3;
 * @return {?proto.path.domain.RenamePathCommand}
 */
proto.path.domain.PathCommand.prototype.getRenamepathcommand = function() {
  return /** @type{?proto.path.domain.RenamePathCommand} */ (
    jspb.Message.getWrapperField(this, proto.path.domain.RenamePathCommand, 3));
};


/**
 * @param {?proto.path.domain.RenamePathCommand|undefined} value
 * @return {!proto.path.domain.PathCommand} returns this
*/
proto.path.domain.PathCommand.prototype.setRenamepathcommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.path.domain.PathCommand.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.domain.PathCommand} returns this
 */
proto.path.domain.PathCommand.prototype.clearRenamepathcommand = function() {
  return this.setRenamepathcommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.domain.PathCommand.prototype.hasRenamepathcommand = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RemovePathCommand removePathCommand = 4;
 * @return {?proto.path.domain.RemovePathCommand}
 */
proto.path.domain.PathCommand.prototype.getRemovepathcommand = function() {
  return /** @type{?proto.path.domain.RemovePathCommand} */ (
    jspb.Message.getWrapperField(this, proto.path.domain.RemovePathCommand, 4));
};


/**
 * @param {?proto.path.domain.RemovePathCommand|undefined} value
 * @return {!proto.path.domain.PathCommand} returns this
*/
proto.path.domain.PathCommand.prototype.setRemovepathcommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.path.domain.PathCommand.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.domain.PathCommand} returns this
 */
proto.path.domain.PathCommand.prototype.clearRemovepathcommand = function() {
  return this.setRemovepathcommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.domain.PathCommand.prototype.hasRemovepathcommand = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.path.domain.CreatePathFromGpxCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.domain.CreatePathFromGpxCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.domain.CreatePathFromGpxCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    track: (f = msg.getTrack()) && gpx_pb.Track.toObject(includeInstance, f),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    bounds: (f = msg.getBounds()) && gpx_pb.Bounds.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.domain.CreatePathFromGpxCommand}
 */
proto.path.domain.CreatePathFromGpxCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.domain.CreatePathFromGpxCommand;
  return proto.path.domain.CreatePathFromGpxCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.domain.CreatePathFromGpxCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.domain.CreatePathFromGpxCommand}
 */
proto.path.domain.CreatePathFromGpxCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new gpx_pb.Track;
      reader.readMessage(value,gpx_pb.Track.deserializeBinaryFromReader);
      msg.setTrack(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 5:
      var value = new gpx_pb.Bounds;
      reader.readMessage(value,gpx_pb.Bounds.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.domain.CreatePathFromGpxCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.domain.CreatePathFromGpxCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.domain.CreatePathFromGpxCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrack();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      gpx_pb.Track.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      gpx_pb.Bounds.serializeBinaryToWriter
    );
  }
};


/**
 * optional path.gpx.Track track = 3;
 * @return {?proto.path.gpx.Track}
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.getTrack = function() {
  return /** @type{?proto.path.gpx.Track} */ (
    jspb.Message.getWrapperField(this, gpx_pb.Track, 3));
};


/**
 * @param {?proto.path.gpx.Track|undefined} value
 * @return {!proto.path.domain.CreatePathFromGpxCommand} returns this
*/
proto.path.domain.CreatePathFromGpxCommand.prototype.setTrack = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.domain.CreatePathFromGpxCommand} returns this
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.clearTrack = function() {
  return this.setTrack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.hasTrack = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.path.domain.CreatePathFromGpxCommand} returns this
*/
proto.path.domain.CreatePathFromGpxCommand.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.domain.CreatePathFromGpxCommand} returns this
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional path.gpx.Bounds bounds = 5;
 * @return {?proto.path.gpx.Bounds}
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.getBounds = function() {
  return /** @type{?proto.path.gpx.Bounds} */ (
    jspb.Message.getWrapperField(this, gpx_pb.Bounds, 5));
};


/**
 * @param {?proto.path.gpx.Bounds|undefined} value
 * @return {!proto.path.domain.CreatePathFromGpxCommand} returns this
*/
proto.path.domain.CreatePathFromGpxCommand.prototype.setBounds = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.domain.CreatePathFromGpxCommand} returns this
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.clearBounds = function() {
  return this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.domain.CreatePathFromGpxCommand.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.domain.RenamePathCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.path.domain.RenamePathCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.domain.RenamePathCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.domain.RenamePathCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.domain.RenamePathCommand}
 */
proto.path.domain.RenamePathCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.domain.RenamePathCommand;
  return proto.path.domain.RenamePathCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.domain.RenamePathCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.domain.RenamePathCommand}
 */
proto.path.domain.RenamePathCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.domain.RenamePathCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.domain.RenamePathCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.domain.RenamePathCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.domain.RenamePathCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.path.domain.RenamePathCommand.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.path.domain.RenamePathCommand} returns this
 */
proto.path.domain.RenamePathCommand.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.domain.RemovePathCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.path.domain.RemovePathCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.domain.RemovePathCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.domain.RemovePathCommand.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.domain.RemovePathCommand}
 */
proto.path.domain.RemovePathCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.domain.RemovePathCommand;
  return proto.path.domain.RemovePathCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.domain.RemovePathCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.domain.RemovePathCommand}
 */
proto.path.domain.RemovePathCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.domain.RemovePathCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.domain.RemovePathCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.domain.RemovePathCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.domain.RemovePathCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.path.domain);
