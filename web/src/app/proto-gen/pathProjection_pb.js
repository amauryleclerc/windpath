// source: pathProjection.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.path.projection.Bounds', null, global);
goog.exportSymbol('proto.path.projection.Path', null, global);
goog.exportSymbol('proto.path.projection.PathSegment', null, global);
goog.exportSymbol('proto.path.projection.Position', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.Path = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.path.projection.Path.repeatedFields_, null);
};
goog.inherits(proto.path.projection.Path, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.Path.displayName = 'proto.path.projection.Path';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.Bounds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.projection.Bounds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.Bounds.displayName = 'proto.path.projection.Bounds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.PathSegment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.projection.PathSegment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.PathSegment.displayName = 'proto.path.projection.PathSegment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.Position = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.projection.Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.Position.displayName = 'proto.path.projection.Position';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.path.projection.Path.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.Path.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.Path.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.Path} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.Path.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_pb.ProtoUUID.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    segmentsList: jspb.Message.toObjectList(msg.getSegmentsList(),
    proto.path.projection.PathSegment.toObject, includeInstance),
    maxspeedpositon: (f = msg.getMaxspeedpositon()) && proto.path.projection.Position.toObject(includeInstance, f),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    averagespeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    distance: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    bounds: (f = msg.getBounds()) && proto.path.projection.Bounds.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.Path}
 */
proto.path.projection.Path.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.Path;
  return proto.path.projection.Path.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.Path} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.Path}
 */
proto.path.projection.Path.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ProtoUUID;
      reader.readMessage(value,common_pb.ProtoUUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 4:
      var value = new proto.path.projection.PathSegment;
      reader.readMessage(value,proto.path.projection.PathSegment.deserializeBinaryFromReader);
      msg.addSegments(value);
      break;
    case 5:
      var value = new proto.path.projection.Position;
      reader.readMessage(value,proto.path.projection.Position.deserializeBinaryFromReader);
      msg.setMaxspeedpositon(value);
      break;
    case 6:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAveragespeed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistance(value);
      break;
    case 9:
      var value = new proto.path.projection.Bounds;
      reader.readMessage(value,proto.path.projection.Bounds.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.Path.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.Path.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.Path} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.Path.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ProtoUUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSegmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.path.projection.PathSegment.serializeBinaryToWriter
    );
  }
  f = message.getMaxspeedpositon();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.path.projection.Position.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getAveragespeed();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.path.projection.Bounds.serializeBinaryToWriter
    );
  }
};


/**
 * optional path.common.ProtoUUID id = 1;
 * @return {?proto.path.common.ProtoUUID}
 */
proto.path.projection.Path.prototype.getId = function() {
  return /** @type{?proto.path.common.ProtoUUID} */ (
    jspb.Message.getWrapperField(this, common_pb.ProtoUUID, 1));
};


/**
 * @param {?proto.path.common.ProtoUUID|undefined} value
 * @return {!proto.path.projection.Path} returns this
*/
proto.path.projection.Path.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.Path} returns this
 */
proto.path.projection.Path.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.Path.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.path.projection.Path.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.path.projection.Path} returns this
 */
proto.path.projection.Path.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.path.projection.Path.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.path.projection.Path} returns this
*/
proto.path.projection.Path.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.Path} returns this
 */
proto.path.projection.Path.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.Path.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated PathSegment segments = 4;
 * @return {!Array<!proto.path.projection.PathSegment>}
 */
proto.path.projection.Path.prototype.getSegmentsList = function() {
  return /** @type{!Array<!proto.path.projection.PathSegment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.path.projection.PathSegment, 4));
};


/**
 * @param {!Array<!proto.path.projection.PathSegment>} value
 * @return {!proto.path.projection.Path} returns this
*/
proto.path.projection.Path.prototype.setSegmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.path.projection.PathSegment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.path.projection.PathSegment}
 */
proto.path.projection.Path.prototype.addSegments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.path.projection.PathSegment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.path.projection.Path} returns this
 */
proto.path.projection.Path.prototype.clearSegmentsList = function() {
  return this.setSegmentsList([]);
};


/**
 * optional Position maxSpeedPositon = 5;
 * @return {?proto.path.projection.Position}
 */
proto.path.projection.Path.prototype.getMaxspeedpositon = function() {
  return /** @type{?proto.path.projection.Position} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.Position, 5));
};


/**
 * @param {?proto.path.projection.Position|undefined} value
 * @return {!proto.path.projection.Path} returns this
*/
proto.path.projection.Path.prototype.setMaxspeedpositon = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.Path} returns this
 */
proto.path.projection.Path.prototype.clearMaxspeedpositon = function() {
  return this.setMaxspeedpositon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.Path.prototype.hasMaxspeedpositon = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Duration duration = 6;
 * @return {?proto.google.protobuf.Duration}
 */
proto.path.projection.Path.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 6));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.path.projection.Path} returns this
*/
proto.path.projection.Path.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.Path} returns this
 */
proto.path.projection.Path.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.Path.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double averageSpeed = 7;
 * @return {number}
 */
proto.path.projection.Path.prototype.getAveragespeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.path.projection.Path} returns this
 */
proto.path.projection.Path.prototype.setAveragespeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double distance = 8;
 * @return {number}
 */
proto.path.projection.Path.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.path.projection.Path} returns this
 */
proto.path.projection.Path.prototype.setDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional Bounds bounds = 9;
 * @return {?proto.path.projection.Bounds}
 */
proto.path.projection.Path.prototype.getBounds = function() {
  return /** @type{?proto.path.projection.Bounds} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.Bounds, 9));
};


/**
 * @param {?proto.path.projection.Bounds|undefined} value
 * @return {!proto.path.projection.Path} returns this
*/
proto.path.projection.Path.prototype.setBounds = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.Path} returns this
 */
proto.path.projection.Path.prototype.clearBounds = function() {
  return this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.Path.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.Bounds.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.Bounds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.Bounds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.Bounds.toObject = function(includeInstance, msg) {
  var f, obj = {
    cornera: (f = msg.getCornera()) && proto.path.projection.Position.toObject(includeInstance, f),
    cornerb: (f = msg.getCornerb()) && proto.path.projection.Position.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.Bounds}
 */
proto.path.projection.Bounds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.Bounds;
  return proto.path.projection.Bounds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.Bounds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.Bounds}
 */
proto.path.projection.Bounds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.path.projection.Position;
      reader.readMessage(value,proto.path.projection.Position.deserializeBinaryFromReader);
      msg.setCornera(value);
      break;
    case 2:
      var value = new proto.path.projection.Position;
      reader.readMessage(value,proto.path.projection.Position.deserializeBinaryFromReader);
      msg.setCornerb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.Bounds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.Bounds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.Bounds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.Bounds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCornera();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.path.projection.Position.serializeBinaryToWriter
    );
  }
  f = message.getCornerb();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.path.projection.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional Position cornerA = 1;
 * @return {?proto.path.projection.Position}
 */
proto.path.projection.Bounds.prototype.getCornera = function() {
  return /** @type{?proto.path.projection.Position} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.Position, 1));
};


/**
 * @param {?proto.path.projection.Position|undefined} value
 * @return {!proto.path.projection.Bounds} returns this
*/
proto.path.projection.Bounds.prototype.setCornera = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.Bounds} returns this
 */
proto.path.projection.Bounds.prototype.clearCornera = function() {
  return this.setCornera(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.Bounds.prototype.hasCornera = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Position cornerB = 2;
 * @return {?proto.path.projection.Position}
 */
proto.path.projection.Bounds.prototype.getCornerb = function() {
  return /** @type{?proto.path.projection.Position} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.Position, 2));
};


/**
 * @param {?proto.path.projection.Position|undefined} value
 * @return {!proto.path.projection.Bounds} returns this
*/
proto.path.projection.Bounds.prototype.setCornerb = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.Bounds} returns this
 */
proto.path.projection.Bounds.prototype.clearCornerb = function() {
  return this.setCornerb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.Bounds.prototype.hasCornerb = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.PathSegment.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.PathSegment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.PathSegment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSegment.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointa: (f = msg.getPointa()) && proto.path.projection.Position.toObject(includeInstance, f),
    pointb: (f = msg.getPointb()) && proto.path.projection.Position.toObject(includeInstance, f),
    speed: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.PathSegment}
 */
proto.path.projection.PathSegment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.PathSegment;
  return proto.path.projection.PathSegment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.PathSegment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.PathSegment}
 */
proto.path.projection.PathSegment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.path.projection.Position;
      reader.readMessage(value,proto.path.projection.Position.deserializeBinaryFromReader);
      msg.setPointa(value);
      break;
    case 2:
      var value = new proto.path.projection.Position;
      reader.readMessage(value,proto.path.projection.Position.deserializeBinaryFromReader);
      msg.setPointb(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpeed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.PathSegment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.PathSegment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.PathSegment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSegment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointa();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.path.projection.Position.serializeBinaryToWriter
    );
  }
  f = message.getPointb();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.path.projection.Position.serializeBinaryToWriter
    );
  }
  f = message.getSpeed();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional Position pointA = 1;
 * @return {?proto.path.projection.Position}
 */
proto.path.projection.PathSegment.prototype.getPointa = function() {
  return /** @type{?proto.path.projection.Position} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.Position, 1));
};


/**
 * @param {?proto.path.projection.Position|undefined} value
 * @return {!proto.path.projection.PathSegment} returns this
*/
proto.path.projection.PathSegment.prototype.setPointa = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSegment} returns this
 */
proto.path.projection.PathSegment.prototype.clearPointa = function() {
  return this.setPointa(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSegment.prototype.hasPointa = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Position pointB = 2;
 * @return {?proto.path.projection.Position}
 */
proto.path.projection.PathSegment.prototype.getPointb = function() {
  return /** @type{?proto.path.projection.Position} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.Position, 2));
};


/**
 * @param {?proto.path.projection.Position|undefined} value
 * @return {!proto.path.projection.PathSegment} returns this
*/
proto.path.projection.PathSegment.prototype.setPointb = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSegment} returns this
 */
proto.path.projection.PathSegment.prototype.clearPointb = function() {
  return this.setPointb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSegment.prototype.hasPointb = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double speed = 3;
 * @return {number}
 */
proto.path.projection.PathSegment.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.path.projection.PathSegment} returns this
 */
proto.path.projection.PathSegment.prototype.setSpeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.Position.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.Position.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.Position} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.Position.toObject = function(includeInstance, msg) {
  var f, obj = {
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    speed: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.Position}
 */
proto.path.projection.Position.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.Position;
  return proto.path.projection.Position.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.Position}
 */
proto.path.projection.Position.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpeed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.Position.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.Position.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getSpeed();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double lat = 1;
 * @return {number}
 */
proto.path.projection.Position.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.path.projection.Position} returns this
 */
proto.path.projection.Position.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double lon = 2;
 * @return {number}
 */
proto.path.projection.Position.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.path.projection.Position} returns this
 */
proto.path.projection.Position.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double speed = 3;
 * @return {number}
 */
proto.path.projection.Position.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.path.projection.Position} returns this
 */
proto.path.projection.Position.prototype.setSpeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


goog.object.extend(exports, proto.path.projection);
