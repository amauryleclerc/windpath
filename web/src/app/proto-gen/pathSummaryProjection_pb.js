// source: pathSummaryProjection.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.path.projection.CurrentSummaryStateEvent', null, global);
goog.exportSymbol('proto.path.projection.PathSession', null, global);
goog.exportSymbol('proto.path.projection.PathSummary', null, global);
goog.exportSymbol('proto.path.projection.PathSummaryCreatedEvent', null, global);
goog.exportSymbol('proto.path.projection.PathSummaryProjectionEvent', null, global);
goog.exportSymbol('proto.path.projection.PathSummaryProjectionEvent.EventCase', null, global);
goog.exportSymbol('proto.path.projection.PathSummaryRemovedEvent', null, global);
goog.exportSymbol('proto.path.projection.PathSummaryRenamedEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.PathSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.projection.PathSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.PathSession.displayName = 'proto.path.projection.PathSession';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.PathSummaryProjectionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.path.projection.PathSummaryProjectionEvent.oneofGroups_);
};
goog.inherits(proto.path.projection.PathSummaryProjectionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.PathSummaryProjectionEvent.displayName = 'proto.path.projection.PathSummaryProjectionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.PathSummaryCreatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.projection.PathSummaryCreatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.PathSummaryCreatedEvent.displayName = 'proto.path.projection.PathSummaryCreatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.PathSummaryRenamedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.projection.PathSummaryRenamedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.PathSummaryRenamedEvent.displayName = 'proto.path.projection.PathSummaryRenamedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.PathSummaryRemovedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.projection.PathSummaryRemovedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.PathSummaryRemovedEvent.displayName = 'proto.path.projection.PathSummaryRemovedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.CurrentSummaryStateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.path.projection.CurrentSummaryStateEvent.repeatedFields_, null);
};
goog.inherits(proto.path.projection.CurrentSummaryStateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.CurrentSummaryStateEvent.displayName = 'proto.path.projection.CurrentSummaryStateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.path.projection.PathSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.path.projection.PathSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.path.projection.PathSummary.displayName = 'proto.path.projection.PathSummary';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.PathSession.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.PathSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.PathSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSession.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.PathSession}
 */
proto.path.projection.PathSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.PathSession;
  return proto.path.projection.PathSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.PathSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.PathSession}
 */
proto.path.projection.PathSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.PathSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.PathSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.PathSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.path.projection.PathSummaryProjectionEvent.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.path.projection.PathSummaryProjectionEvent.EventCase = {
  EVENT_NOT_SET: 0,
  CURRENTSTATEEVENT: 1,
  PATHCREATEDEVENT: 2,
  PATHRENAMEDEVENT: 3,
  PATHREMOVEDEVENT: 4
};

/**
 * @return {proto.path.projection.PathSummaryProjectionEvent.EventCase}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.getEventCase = function() {
  return /** @type {proto.path.projection.PathSummaryProjectionEvent.EventCase} */(jspb.Message.computeOneofCase(this, proto.path.projection.PathSummaryProjectionEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.PathSummaryProjectionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.PathSummaryProjectionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummaryProjectionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentstateevent: (f = msg.getCurrentstateevent()) && proto.path.projection.CurrentSummaryStateEvent.toObject(includeInstance, f),
    pathcreatedevent: (f = msg.getPathcreatedevent()) && proto.path.projection.PathSummaryCreatedEvent.toObject(includeInstance, f),
    pathrenamedevent: (f = msg.getPathrenamedevent()) && proto.path.projection.PathSummaryRenamedEvent.toObject(includeInstance, f),
    pathremovedevent: (f = msg.getPathremovedevent()) && proto.path.projection.PathSummaryRemovedEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.PathSummaryProjectionEvent}
 */
proto.path.projection.PathSummaryProjectionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.PathSummaryProjectionEvent;
  return proto.path.projection.PathSummaryProjectionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.PathSummaryProjectionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.PathSummaryProjectionEvent}
 */
proto.path.projection.PathSummaryProjectionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.path.projection.CurrentSummaryStateEvent;
      reader.readMessage(value,proto.path.projection.CurrentSummaryStateEvent.deserializeBinaryFromReader);
      msg.setCurrentstateevent(value);
      break;
    case 2:
      var value = new proto.path.projection.PathSummaryCreatedEvent;
      reader.readMessage(value,proto.path.projection.PathSummaryCreatedEvent.deserializeBinaryFromReader);
      msg.setPathcreatedevent(value);
      break;
    case 3:
      var value = new proto.path.projection.PathSummaryRenamedEvent;
      reader.readMessage(value,proto.path.projection.PathSummaryRenamedEvent.deserializeBinaryFromReader);
      msg.setPathrenamedevent(value);
      break;
    case 4:
      var value = new proto.path.projection.PathSummaryRemovedEvent;
      reader.readMessage(value,proto.path.projection.PathSummaryRemovedEvent.deserializeBinaryFromReader);
      msg.setPathremovedevent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.PathSummaryProjectionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.PathSummaryProjectionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummaryProjectionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentstateevent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.path.projection.CurrentSummaryStateEvent.serializeBinaryToWriter
    );
  }
  f = message.getPathcreatedevent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.path.projection.PathSummaryCreatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPathrenamedevent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.path.projection.PathSummaryRenamedEvent.serializeBinaryToWriter
    );
  }
  f = message.getPathremovedevent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.path.projection.PathSummaryRemovedEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional CurrentSummaryStateEvent currentStateEvent = 1;
 * @return {?proto.path.projection.CurrentSummaryStateEvent}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.getCurrentstateevent = function() {
  return /** @type{?proto.path.projection.CurrentSummaryStateEvent} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.CurrentSummaryStateEvent, 1));
};


/**
 * @param {?proto.path.projection.CurrentSummaryStateEvent|undefined} value
 * @return {!proto.path.projection.PathSummaryProjectionEvent} returns this
*/
proto.path.projection.PathSummaryProjectionEvent.prototype.setCurrentstateevent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.path.projection.PathSummaryProjectionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummaryProjectionEvent} returns this
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.clearCurrentstateevent = function() {
  return this.setCurrentstateevent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.hasCurrentstateevent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PathSummaryCreatedEvent pathCreatedEvent = 2;
 * @return {?proto.path.projection.PathSummaryCreatedEvent}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.getPathcreatedevent = function() {
  return /** @type{?proto.path.projection.PathSummaryCreatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.PathSummaryCreatedEvent, 2));
};


/**
 * @param {?proto.path.projection.PathSummaryCreatedEvent|undefined} value
 * @return {!proto.path.projection.PathSummaryProjectionEvent} returns this
*/
proto.path.projection.PathSummaryProjectionEvent.prototype.setPathcreatedevent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.path.projection.PathSummaryProjectionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummaryProjectionEvent} returns this
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.clearPathcreatedevent = function() {
  return this.setPathcreatedevent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.hasPathcreatedevent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PathSummaryRenamedEvent pathRenamedEvent = 3;
 * @return {?proto.path.projection.PathSummaryRenamedEvent}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.getPathrenamedevent = function() {
  return /** @type{?proto.path.projection.PathSummaryRenamedEvent} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.PathSummaryRenamedEvent, 3));
};


/**
 * @param {?proto.path.projection.PathSummaryRenamedEvent|undefined} value
 * @return {!proto.path.projection.PathSummaryProjectionEvent} returns this
*/
proto.path.projection.PathSummaryProjectionEvent.prototype.setPathrenamedevent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.path.projection.PathSummaryProjectionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummaryProjectionEvent} returns this
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.clearPathrenamedevent = function() {
  return this.setPathrenamedevent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.hasPathrenamedevent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PathSummaryRemovedEvent pathRemovedEvent = 4;
 * @return {?proto.path.projection.PathSummaryRemovedEvent}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.getPathremovedevent = function() {
  return /** @type{?proto.path.projection.PathSummaryRemovedEvent} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.PathSummaryRemovedEvent, 4));
};


/**
 * @param {?proto.path.projection.PathSummaryRemovedEvent|undefined} value
 * @return {!proto.path.projection.PathSummaryProjectionEvent} returns this
*/
proto.path.projection.PathSummaryProjectionEvent.prototype.setPathremovedevent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.path.projection.PathSummaryProjectionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummaryProjectionEvent} returns this
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.clearPathremovedevent = function() {
  return this.setPathremovedevent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummaryProjectionEvent.prototype.hasPathremovedevent = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.PathSummaryCreatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.PathSummaryCreatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.PathSummaryCreatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummaryCreatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.path.projection.PathSummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.PathSummaryCreatedEvent}
 */
proto.path.projection.PathSummaryCreatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.PathSummaryCreatedEvent;
  return proto.path.projection.PathSummaryCreatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.PathSummaryCreatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.PathSummaryCreatedEvent}
 */
proto.path.projection.PathSummaryCreatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.path.projection.PathSummary;
      reader.readMessage(value,proto.path.projection.PathSummary.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.PathSummaryCreatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.PathSummaryCreatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.PathSummaryCreatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummaryCreatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.path.projection.PathSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional PathSummary path = 1;
 * @return {?proto.path.projection.PathSummary}
 */
proto.path.projection.PathSummaryCreatedEvent.prototype.getPath = function() {
  return /** @type{?proto.path.projection.PathSummary} */ (
    jspb.Message.getWrapperField(this, proto.path.projection.PathSummary, 1));
};


/**
 * @param {?proto.path.projection.PathSummary|undefined} value
 * @return {!proto.path.projection.PathSummaryCreatedEvent} returns this
*/
proto.path.projection.PathSummaryCreatedEvent.prototype.setPath = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummaryCreatedEvent} returns this
 */
proto.path.projection.PathSummaryCreatedEvent.prototype.clearPath = function() {
  return this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummaryCreatedEvent.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.PathSummaryRenamedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.PathSummaryRenamedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.PathSummaryRenamedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummaryRenamedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_pb.ProtoUUID.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.PathSummaryRenamedEvent}
 */
proto.path.projection.PathSummaryRenamedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.PathSummaryRenamedEvent;
  return proto.path.projection.PathSummaryRenamedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.PathSummaryRenamedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.PathSummaryRenamedEvent}
 */
proto.path.projection.PathSummaryRenamedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ProtoUUID;
      reader.readMessage(value,common_pb.ProtoUUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.PathSummaryRenamedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.PathSummaryRenamedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.PathSummaryRenamedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummaryRenamedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ProtoUUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional path.common.ProtoUUID id = 1;
 * @return {?proto.path.common.ProtoUUID}
 */
proto.path.projection.PathSummaryRenamedEvent.prototype.getId = function() {
  return /** @type{?proto.path.common.ProtoUUID} */ (
    jspb.Message.getWrapperField(this, common_pb.ProtoUUID, 1));
};


/**
 * @param {?proto.path.common.ProtoUUID|undefined} value
 * @return {!proto.path.projection.PathSummaryRenamedEvent} returns this
*/
proto.path.projection.PathSummaryRenamedEvent.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummaryRenamedEvent} returns this
 */
proto.path.projection.PathSummaryRenamedEvent.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummaryRenamedEvent.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.path.projection.PathSummaryRenamedEvent.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.path.projection.PathSummaryRenamedEvent} returns this
 */
proto.path.projection.PathSummaryRenamedEvent.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.PathSummaryRemovedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.PathSummaryRemovedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.PathSummaryRemovedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummaryRemovedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_pb.ProtoUUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.PathSummaryRemovedEvent}
 */
proto.path.projection.PathSummaryRemovedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.PathSummaryRemovedEvent;
  return proto.path.projection.PathSummaryRemovedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.PathSummaryRemovedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.PathSummaryRemovedEvent}
 */
proto.path.projection.PathSummaryRemovedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ProtoUUID;
      reader.readMessage(value,common_pb.ProtoUUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.PathSummaryRemovedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.PathSummaryRemovedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.PathSummaryRemovedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummaryRemovedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ProtoUUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional path.common.ProtoUUID id = 1;
 * @return {?proto.path.common.ProtoUUID}
 */
proto.path.projection.PathSummaryRemovedEvent.prototype.getId = function() {
  return /** @type{?proto.path.common.ProtoUUID} */ (
    jspb.Message.getWrapperField(this, common_pb.ProtoUUID, 1));
};


/**
 * @param {?proto.path.common.ProtoUUID|undefined} value
 * @return {!proto.path.projection.PathSummaryRemovedEvent} returns this
*/
proto.path.projection.PathSummaryRemovedEvent.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummaryRemovedEvent} returns this
 */
proto.path.projection.PathSummaryRemovedEvent.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummaryRemovedEvent.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.path.projection.CurrentSummaryStateEvent.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.CurrentSummaryStateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.CurrentSummaryStateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.CurrentSummaryStateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.CurrentSummaryStateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathsList: jspb.Message.toObjectList(msg.getPathsList(),
    proto.path.projection.PathSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.CurrentSummaryStateEvent}
 */
proto.path.projection.CurrentSummaryStateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.CurrentSummaryStateEvent;
  return proto.path.projection.CurrentSummaryStateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.CurrentSummaryStateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.CurrentSummaryStateEvent}
 */
proto.path.projection.CurrentSummaryStateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.path.projection.PathSummary;
      reader.readMessage(value,proto.path.projection.PathSummary.deserializeBinaryFromReader);
      msg.addPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.CurrentSummaryStateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.CurrentSummaryStateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.CurrentSummaryStateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.CurrentSummaryStateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.path.projection.PathSummary.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PathSummary paths = 1;
 * @return {!Array<!proto.path.projection.PathSummary>}
 */
proto.path.projection.CurrentSummaryStateEvent.prototype.getPathsList = function() {
  return /** @type{!Array<!proto.path.projection.PathSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.path.projection.PathSummary, 1));
};


/**
 * @param {!Array<!proto.path.projection.PathSummary>} value
 * @return {!proto.path.projection.CurrentSummaryStateEvent} returns this
*/
proto.path.projection.CurrentSummaryStateEvent.prototype.setPathsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.path.projection.PathSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.path.projection.PathSummary}
 */
proto.path.projection.CurrentSummaryStateEvent.prototype.addPaths = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.path.projection.PathSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.path.projection.CurrentSummaryStateEvent} returns this
 */
proto.path.projection.CurrentSummaryStateEvent.prototype.clearPathsList = function() {
  return this.setPathsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.path.projection.PathSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.path.projection.PathSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.path.projection.PathSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_pb.ProtoUUID.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    averagespeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    maxspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    distance: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.path.projection.PathSummary}
 */
proto.path.projection.PathSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.path.projection.PathSummary;
  return proto.path.projection.PathSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.path.projection.PathSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.path.projection.PathSummary}
 */
proto.path.projection.PathSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ProtoUUID;
      reader.readMessage(value,common_pb.ProtoUUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 4:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAveragespeed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxspeed(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.path.projection.PathSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.path.projection.PathSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.path.projection.PathSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.path.projection.PathSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ProtoUUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getAveragespeed();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getMaxspeed();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * optional path.common.ProtoUUID id = 1;
 * @return {?proto.path.common.ProtoUUID}
 */
proto.path.projection.PathSummary.prototype.getId = function() {
  return /** @type{?proto.path.common.ProtoUUID} */ (
    jspb.Message.getWrapperField(this, common_pb.ProtoUUID, 1));
};


/**
 * @param {?proto.path.common.ProtoUUID|undefined} value
 * @return {!proto.path.projection.PathSummary} returns this
*/
proto.path.projection.PathSummary.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummary} returns this
 */
proto.path.projection.PathSummary.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummary.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.path.projection.PathSummary.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.path.projection.PathSummary} returns this
 */
proto.path.projection.PathSummary.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.path.projection.PathSummary.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.path.projection.PathSummary} returns this
*/
proto.path.projection.PathSummary.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummary} returns this
 */
proto.path.projection.PathSummary.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummary.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Duration duration = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.path.projection.PathSummary.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.path.projection.PathSummary} returns this
*/
proto.path.projection.PathSummary.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.path.projection.PathSummary} returns this
 */
proto.path.projection.PathSummary.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.path.projection.PathSummary.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double averageSpeed = 5;
 * @return {number}
 */
proto.path.projection.PathSummary.prototype.getAveragespeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.path.projection.PathSummary} returns this
 */
proto.path.projection.PathSummary.prototype.setAveragespeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double maxSpeed = 6;
 * @return {number}
 */
proto.path.projection.PathSummary.prototype.getMaxspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.path.projection.PathSummary} returns this
 */
proto.path.projection.PathSummary.prototype.setMaxspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double distance = 7;
 * @return {number}
 */
proto.path.projection.PathSummary.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.path.projection.PathSummary} returns this
 */
proto.path.projection.PathSummary.prototype.setDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


goog.object.extend(exports, proto.path.projection);
